#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
#include <limits>

using namespace std;

const string FILENAME = "users.txt";

bool userExists(const string& username) {
    ifstream file(FILENAME);
    if (!file.is_open()) return false;

    string line;
    while (getline(file, line)) {
        size_t spacePos = line.find(' ');
        if (spacePos != string::npos) {
            string storedUser = line.substr(0, spacePos);
            if (storedUser == username) {
                file.close();
                return true;
            }
        }
    }
    file.close();
    return false;
}

void registerUser() {
    string username, password;

    // Get valid username
    while (true) {
        cout << "Enter username: ";
        getline(cin, username);
        
        // Convert to lowercase
        transform(username.begin(), username.end(), username.begin(), ::tolower);
        
        if (username.empty()) {
            cout << "Username cannot be empty!\n";
        } else if (username.find(' ') != string::npos) {
            cout << "Username cannot contain spaces!\n";
        } else if (userExists(username)) {
            cout << "Username already exists!\n";
        } else {
            break;
        }
    }

    // Get valid password
    while (true) {
        cout << "Enter password: ";
        getline(cin, password);
        
        if (password.empty()) {
            cout << "Password cannot be empty!\n";
        } else if (password.find(' ') != string::npos) {
            cout << "Password cannot contain spaces!\n";
        } else {
            break;
        }
    }

    // Save to file
    ofstream file(FILENAME, ios::app);
    if (file.is_open()) {
        file << username << " " << password << endl;
        cout << "Registration successful!\n";
        file.close();
    } else {
        cout << "Error saving user data!\n";
    }
}

void loginUser() {
    string username, password;

    cout << "Enter username: ";
    getline(cin, username);
    cout << "Enter password: ";
    getline(cin, password);

    // Convert username to lowercase
    transform(username.begin(), username.end(), username.begin(), ::tolower);

    ifstream file(FILENAME);
    if (!file.is_open()) {
        cout << "No users registered yet!\n";
        return;
    }

    string line;
    bool found = false;
    while (getline(file, line)) {
        size_t spacePos = line.find(' ');
        if (spacePos != string::npos) {
            string storedUser = line.substr(0, spacePos);
            string storedPass = line.substr(spacePos + 1);
            
            if (storedUser == username && storedPass == password) {
                found = true;
                break;
            }
        }
    }
    file.close();

    if (found) {
        cout << "Login successful!\n";
    } else {
        cout << "Invalid username or password!\n";
    }
}

int main() {
    int choice;
    
    do {
        cout << "\n1. Register\n2. Login\n3. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore(numeric_limits<streamsize>::max(), '\n');  // Clear input buffer

        switch(choice) {
            case 1:
                registerUser();
                break;
            case 2:
                loginUser();
                break;
            case 3:
                cout << "Exiting program...\n";
                break;
            default:
                cout << "Invalid choice! Try again.\n";
        }
    } while (choice != 3);

    return 0;
}
